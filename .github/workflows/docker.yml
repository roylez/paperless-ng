name: build

on:
  push:
    branches: master

jobs:
  frontend:
    runs-on: ubuntu-20.04
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      uses: actions/setup-node@v2
      with:
        node-version: '15'
    -
      name: Configure version on dev branches
      if: startsWith(github.ref, 'refs/heads/feature-') || github.ref == 'refs/heads/dev'
      run: |
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        git_branch=${GITHUB_REF#refs/heads/}
        sed -i -E "s/version: \"(.*)\"/version: \"${git_branch} ${git_hash}\"/g" src-ui/src/environments/environment.prod.ts
    -
      name: Build frontend
      run: ./compile-frontend.sh
    -
      name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: frontend-compiled
        path: src/documents/static/frontend/

  build:
    runs-on: ubuntu-latest
    needs: [frontend]
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: download frontend artifact
        uses: actions/download-artifact@v2
        with:
          name: frontend-compiled
          path: src/documents/static/frontend/
      - name: install buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
      - name: login to docker hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin
      - name: get date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - name: build the image
        run: |
          docker buildx build --push \
            --tag $GITHUB_REPOSITORY:latest \
            --tag $GITHUB_REPOSITORY:${{steps.date.outputs.date}} \
            --platform linux/amd64,linux/arm64,linux/arm/v7 .
